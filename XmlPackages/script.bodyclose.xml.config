<?xml version="1.0" standalone="yes" ?>
<!-- ##################################################################################	-->
<!-- Copyright AspDotNetStorefront.com. All Rights Reserved.							-->
<!-- http://www.aspdotnetstorefront.com													-->
<!-- For details on this license please visit the product homepage at the URL above.	-->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.												-->
<!-- ##################################################################################	-->
<package version="2.1" displayname="Close Body Tag Scripts" debug="false" includeentityhelper="false">
	<query name="GoogleDynamicRemarketing" rowElementName="Product" runif="PageType">
		<sql>
			<![CDATA[
				if @CurrentPageType = 'checkout'
				begin
					select sc.ProductID, sc.VariantID, sc.ProductSKU as FullSKU, sc.ProductPrice as Value
					from ShoppingCart sc with (nolock) 
					where sc.CustomerID = @CustomerID
					and sc.StoreID = @StoreID
					and sc.CartType = 0
					and sc.IsSystem = 0
				end  
				else if @CurrentPageType = 'orderconfirmation'
				begin
					select os.ProductID, os.VariantID, os.OrderedProductSKU as FullSKU, os.OrderedProductPrice as Value
					from Orders_ShoppingCart os with (nolock) 
					where os.CustomerID = @CustomerID
					and os.OrderNumber = @OrderNumber
					and os.IsSystem = 0
				end
				else if @CurrentPageType = 'product'
				begin
					select pv.ProductID, pv.VariantID, (p.SKU + isnull(pv.SKUSuffix,'')) as FullSKU, isnull(pv.SalePrice, pv.Price) as Value 
					from ProductVariant pv with (nolock)
					left join Product p on pv.productid = p.productid
					where pv.ProductID = @ProductID
					and pv.published = 1
					and pv.deleted = 0
					and p.IsSystem = 0
					and p.deleted = 0 
					and p.published = 1
				end
			]]>
		</sql>
		<queryparam paramname="@CustomerID" paramtype="system" requestparamname="CustomerID" sqlDataType="int" defvalue="0" validationpattern="^\d{1,10}$" />
		<queryparam paramname="@ProductID" paramtype="runtime" requestparamname="PageID" sqlDataType="int" defvalue="0" validationpattern="^\d{1,10}$" />
		<queryparam paramname="@StoreID" paramtype="runtime" requestparamname="StoreID" sqlDataType="int" defvalue="1" validationpattern="^\d{1,10}$" />
		<queryparam paramname="@CurrentPageType" paramtype="runtime" requestparamname="PageType" sqlDataType="varchar" defvalue="0" validationpattern="" />
		<queryparam paramname="@OrderNumber" paramtype="request" requestparamname="OrderNumber" sqlDataType="varchar" defvalue="0" validationpattern="" />
	</query>
	<query name="Orders" rowElementName="Order" runif="ordernumber">
		<sql>
			<![CDATA[
				select * from Orders o with (NOLOCK) where OrderNumber = @OrderNumber
			]]>
		</sql>
		<queryparam paramname="@OrderNumber" paramtype="request" requestparamname="ordernumber" sqlDataType="int" defvalue="0"  validationpattern="" />
	</query>
	<query name="OrderItems" rowElementName="Item" runif="ordernumber">
		<sql>
			<![CDATA[
				select * from orders_shoppingcart os WITH (nolock) 
				where os.ordernumber = @ordernum
			]]>
		</sql>
		<queryparam paramname="@ordernum" paramtype="request" requestparamname="ordernumber" defvalue="0" sqlDataType="int" validationpattern="^\d{1,9}$"/>
	</query>
	<PackageTransform>
		<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
			<xsl:output method="html" omit-xml-declaration="yes" indent="no" encoding="utf-8"/>

			<xsl:variable name="UseLiveTransactions" select="aspdnsf:AppConfigBool('UseLiveTransactions') = 'true'" />
			<xsl:variable name="PageType" select="/root/Runtime/PageType" />
			
			<xsl:template match="/">
				<xsl:call-template name="GoogleRemarketing" />
				<xsl:call-template name="GoogleAnalytics" />
			</xsl:template>
			
			<xsl:template name="GoogleRemarketing">
				<xsl:variable name="Enabled" select="aspdnsf:AppConfigBool('Google.Remarketing.Enabled') = 'true'" />
				<xsl:if test="$Enabled">
					<xsl:call-template name="GoogleDynamicRemarketing" />
					<xsl:variable name="RemarketingTopic" select="aspdnsf:Topic('Script.Google.Remarketing')" />
					<xsl:if test="string-length($RemarketingTopic) &gt; 0">
						<xsl:value-of select="$RemarketingTopic" disable-output-escaping="yes" />
					</xsl:if>
				</xsl:if>
			</xsl:template>

			<xsl:template name="GoogleDynamicRemarketing">
				<xsl:variable name="Enabled" select="aspdnsf:AppConfigBool('Google.DynamicRemarketing.Enabled') = 'true'" />
				<xsl:if test="$Enabled">
					<xsl:variable name="CurrentPageType" select="/root/Runtime/PageType" />
					<xsl:variable name="CurrentPageID" select="/root/Runtime/PageID" />
					<xsl:variable name="GooglePageType">
						<xsl:choose>
							<xsl:when test="$CurrentPageType = 'home'">
								<xsl:text>home</xsl:text>
							</xsl:when>
							<xsl:when test="$CurrentPageType = 'search'">
								<xsl:text>searchresults</xsl:text>
							</xsl:when>
							<xsl:when test="$CurrentPageType = 'category' or $CurrentPageType = 'section' or $CurrentPageType = 'manufacturer'">
								<xsl:text>category</xsl:text>
							</xsl:when>
							<xsl:when test="$CurrentPageType = 'product'">
								<xsl:text>product</xsl:text>
							</xsl:when>
							<xsl:when test="$CurrentPageType = 'checkout'">
								<xsl:text>cart</xsl:text>
							</xsl:when>
							<xsl:when test="$CurrentPageType = 'orderconfirmation'">
								<xsl:text>purchase</xsl:text>
							</xsl:when>
							<xsl:otherwise>
								<xsl:text>other</xsl:text>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="ProductCount" select="count(/root/GoogleDynamicRemarketing/Product)" />
					<xsl:variable name="GoogleProductID">
						<xsl:choose>
							<xsl:when test="$ProductCount &gt; 0">
								<xsl:if test="$ProductCount &gt; 1">
									<xsl:text>[</xsl:text>
								</xsl:if>
								<xsl:for-each select="/root/GoogleDynamicRemarketing/Product">
									<xsl:variable name="IdentifierString">
										<xsl:call-template name="ParseItemTokens">
											<xsl:with-param name="StringFormat" select="aspdnsf:AppConfig('Google.DynamicRemarketing.ProductIdentifierFormat')" />
										</xsl:call-template>
									</xsl:variable>
									<xsl:call-template name="CommaDelimiter">
										<xsl:with-param name="Value" select="$IdentifierString" />
										<xsl:with-param name="ValueType" select="'string'" />
									</xsl:call-template>
								</xsl:for-each>
								<xsl:if test="$ProductCount &gt; 1">
									<xsl:text>]</xsl:text>
								</xsl:if>
							</xsl:when>
							<xsl:otherwise>
								<xsl:text>''</xsl:text>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="GoogleTotalValue">
						<xsl:choose>
							<xsl:when test="count(/root/GoogleDynamicRemarketing/Product) &gt; 0">
								<xsl:if test="$ProductCount &gt; 1">
									<xsl:text>[</xsl:text>
								</xsl:if>
								<xsl:for-each select="/root/GoogleDynamicRemarketing/Product/Value">
									<xsl:call-template name="CommaDelimiter">
										<xsl:with-param name="Value" select="aspdnsf:FormatDecimal(., 2)" />
									</xsl:call-template>
								</xsl:for-each>
								<xsl:if test="$ProductCount &gt; 1">
									<xsl:text>]</xsl:text>
								</xsl:if>
							</xsl:when>
							<xsl:otherwise>
								<xsl:text>''</xsl:text>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<script type="text/javascript">
						var google_tag_params = {
						ecomm_prodid: <xsl:value-of select="$GoogleProductID" />,
						ecomm_pagetype: '<xsl:value-of select="$GooglePageType" />',
						ecomm_totalvalue: <xsl:value-of select="$GoogleTotalValue" />
						};
					</script>
				</xsl:if>
			</xsl:template>

			<xsl:template name="CommaDelimiter">
				<xsl:param name="Value" />
				<xsl:param name="ValueType" />
				<xsl:if test="position() != 1">
					<xsl:text>,</xsl:text>
				</xsl:if>
				<xsl:if test="$ValueType = 'string'">
					<xsl:text>'</xsl:text>
				</xsl:if>
				<xsl:value-of select="$Value" disable-output-escaping="yes" />
				<xsl:if test="$ValueType = 'string'">
					<xsl:text>'</xsl:text>
				</xsl:if>
			</xsl:template>

			<xsl:template name="ParseItemTokens">
				<xsl:param name="StringFormat" />
				<xsl:variable name="ProductIDParsedString" select="aspdnsf:StrReplace($StringFormat, '{ProductID}', ProductID)" />
				<xsl:variable name="VariantIDParsedString" select="aspdnsf:StrReplace($ProductIDParsedString, '{VariantID}', VariantID)" />
				<xsl:variable name="FullSKUParsedString" select="aspdnsf:StrReplace($VariantIDParsedString, '{FullSKU}', FullSKU)" />
				<xsl:value-of select="$FullSKUParsedString" />
			</xsl:template>

			<xsl:template name="GoogleAnalytics">
				<xsl:variable name="GoogleAnalyticsNumber" select="aspdnsf:AppConfig('Google.AnalyticsAccount')" />
				<xsl:if test="string-length($GoogleAnalyticsNumber) &gt; 0 and $UseLiveTransactions ">
					<!--Google Analytics-->
					<script>
						(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
						(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
						m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
						})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

						ga('create', '<xsl:value-of select="$GoogleAnalyticsNumber" />', '<xsl:value-of select="/root/ServerVariables/HTTP_HOST" />');
						<xsl:if test="aspdnsf:AppConfigBool('Google.AnalyticsDisplayAdvertising.Enabled') = 'true'">
							ga('require', 'displayfeatures');
						</xsl:if>
						ga('send', 'pageview');
					</script>
					<!--Google Analytics Ecommerce -->
					<xsl:apply-templates select="/root/Orders/Order" mode="GoogleAnalyticsEcommerce" />
				</xsl:if>
			</xsl:template>

			<xsl:template match="Order" mode="GoogleAnalyticsEcommerce">
				<xsl:variable name="AlreadyConfirmed" select="not(aspdnsf:StrToLower(/root/Runtime/OrderAlreadyConfirmed) = 'false') and AlreadyConfirmed" />
				<xsl:if test="aspdnsf:AppConfigBool('Google.EcomOrderTrackingEnabled') = 'true' and $PageType = 'orderconfirmation' and not($AlreadyConfirmed)">
					<script type="text/javascript">
						//load ecommerce plugin
						ga('require', 'ecommerce', 'ecommerce.js');

						//add transaction
						ga('ecommerce:addTransaction', {
						'id': '<xsl:value-of select="OrderNumber" disable-output-escaping="yes" />',	// Transaction ID. Required.
						'affiliation': '<xsl:value-of select="aspdnsf:AppConfig('StoreName')" disable-output-escaping="yes" />',	// Affiliation or store name.
						'revenue': '<xsl:value-of select="OrderTotal" disable-output-escaping="yes" />',	// Grand Total.
						'shipping': '<xsl:value-of select="OrderShippingCosts" disable-output-escaping="yes" />',	// Shipping.
						'tax': '<xsl:value-of select="OrderTax" disable-output-escaping="yes" />'	// Tax.
						});

						//add item(s)
						<xsl:apply-templates select="/root/OrderItems/Item" mode="GoogleAnalyticsEcommerce" />

						//send data
						ga('ecommerce:send');

					</script>
				</xsl:if>
			</xsl:template>

			<xsl:template match="Item" mode="GoogleAnalyticsEcommerce">
				<xsl:variable name="CategoryOrVariation">
					<xsl:value-of select="OrderedProductVariantName" disable-output-escaping="yes" />
					<xsl:if test="string-length(ChosenColor) &gt; 0">
						<xsl:text>&#32;</xsl:text>
						<xsl:value-of select="ChosenColor" disable-output-escaping="yes" />
					</xsl:if>
					<xsl:if test="string-length(ChosenSize) &gt; 0">
						<xsl:text>&#32;</xsl:text>
						<xsl:value-of select="ChosenSize" disable-output-escaping="yes" />
					</xsl:if>
				</xsl:variable>
				ga('ecommerce:addItem', {
				'id': '<xsl:value-of select="OrderNumber" disable-output-escaping="yes" />',	// Transaction ID. Required.
				'name': '<xsl:call-template name="CleanData">
					<xsl:with-param name="Data" select="OrderedProductName"/>
				</xsl:call-template>',	// Product name. Required.
				'sku': '<xsl:call-template name="CleanData">
					<xsl:with-param name="Data" select="OrderedProductSKU"/>
				</xsl:call-template>',	// SKU/code.
				'category': '<xsl:call-template name="CleanData">
					<xsl:with-param name="Data" select="$CategoryOrVariation"/>
				</xsl:call-template>',	// Category or variation.
				'price': '<xsl:value-of select="OrderedProductPrice" disable-output-escaping="yes" />',	// Unit price.
				'quantity': '<xsl:value-of select="Quantity" disable-output-escaping="yes" />'	// Quantity.
				});
			</xsl:template>

			<xsl:template name="CleanData">
				<xsl:param name="Data" />
				<xsl:variable name="Apostrophe">
					<xsl:text>'</xsl:text>
				</xsl:variable>
				<xsl:variable name="ApostropheReplacement">
					<xsl:text>\'</xsl:text>
				</xsl:variable>
				<xsl:value-of select="aspdnsf:StrReplace($Data, $Apostrophe, $ApostropheReplacement)" disable-output-escaping="yes" />
			</xsl:template>

		</xsl:stylesheet>
	</PackageTransform>
</package>
